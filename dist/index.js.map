{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import { Inertia } from \"@inertiajs/inertia\";\n\nfunction storageData() {\n\n    let $this = this;\n\n    $this.storageData = {};\n    $this.allowedKeys = [];\n\n    Inertia.on('success', (event) => {\n        console.log(event);\n    });\n\n    return {\n\n        init: function (allowedKeys) {\n            $this.allowedKeys = allowedKeys;\n        },\n\n        find: function (value) {\n            if (typeof value === 'undefined')\n                return $this.storageData;\n\n            let result;\n\n            for (const [key, val] of Object.entries($this.storageData)) {\n                if (typeof val !== 'object' && typeof val !== 'function') {\n                    if (val.indexOf(value) !== -1)\n                        result = val;\n                } else {\n                    if (val.toString().indexOf(value) !== -1)\n                        result = val;\n                }\n            }\n\n            return result;\n        },\n\n        get: function (key) {\n            return $this.storageData[key];\n        },\n\n        set: function (value, key) {\n\n            if (typeof key !== 'undefined') {\n                if\n                (\n                    $this.storageData.length === 0\n                    || typeof $this.allowedKeys.find(el => el === key) === 'undefined'\n                )\n                    return false;\n                else {\n                    $this.storageData[key] = value;\n                    return true;\n                }\n            }\n\n            if (typeof value === 'object') {\n                for (const [key, val] of Object.entries(value)) {\n                    if\n                    (\n                        $this.allowedKeys.length === 0\n                        || typeof $this.allowedKeys.find(el => el === key) !== 'undefined'\n                    )\n                        $this.storageData[key] = val;\n                }\n            }\n\n            return true;\n        },\n\n        del: function (key) {\n            if (typeof $this.storageData[key] !== 'undefined')\n                $this.storageData[key].delete();\n        }\n\n    }\n}\n\nexport let dataLayer = storageData()"],"names":["dataLayer","$this","this","storageData","allowedKeys","Inertia","on","event","console","log","init","find","value","result","Object","entries","val","indexOf","toString","get","key","set","length","el","del"],"mappings":"oCA+EWA,EA7EX,WAEI,IAAIC,EAAQC,KASZ,OAPAD,EAAME,YAAc,GACpBF,EAAMG,YAAc,GAEpBC,UAAQC,GAAG,UAAW,SAACC,GACnBC,QAAQC,IAAIF,KAGT,CAEHG,KAAM,SAAUN,GACZH,EAAMG,YAAcA,GAGxBO,KAAM,SAAUC,GACZ,QAAqB,IAAVA,EACP,OAAOX,EAAME,YAIjB,IAFA,IAAIU,QAEqBC,OAAOC,QAAQd,EAAME,4BAAc,KAA3Ca,UACM,iBAARA,GAAmC,mBAARA,GACN,IAAxBA,EAAIC,QAAQL,KACZC,EAASG,IAE0B,IAAnCA,EAAIE,WAAWD,QAAQL,KACvBC,EAASG,GAIrB,OAAOH,GAGXM,IAAK,SAAUC,GACX,OAAOnB,EAAME,YAAYiB,IAG7BC,IAAK,SAAUT,EAAOQ,GAElB,QAAmB,IAARA,EACP,OAEiC,IAA7BnB,EAAME,YAAYmB,aACqC,IAA7CrB,EAAMG,YAAYO,KAAK,SAAAY,UAAMA,IAAOH,MAI9CnB,EAAME,YAAYiB,GAAOR,MAKjC,GAAqB,iBAAVA,EACP,gCAAYQ,OAAKJ,OAGoB,IAA7Bf,EAAMG,YAAYkB,aACqC,IAA7CrB,EAAMG,YAAYO,KAAK,SAAAY,UAAMA,IAAOH,MAE9CnB,EAAME,YAAYiB,GAAOJ,UANRF,OAAOC,QAAQH,sBAU5C,UAGJY,IAAK,SAAUJ,QAC2B,IAA3BnB,EAAME,YAAYiB,IACzBnB,EAAME,YAAYiB,cAMXjB"}